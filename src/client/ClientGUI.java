/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;


import java.io.IOException;
import java.io.InputStream;
import java.net.Socket;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JTextArea;


/**
 *
 * @author Paolo Delos Reyes, Richard Ingles, and Emir Mendoza
 */
public class ClientGUI extends javax.swing.JFrame implements Runnable {

    private clientMainGUI cmGUI;
    private String username;
    private final String ipAddress;
    private final int portnum;
    private Thread guiThread;
    private Socket socket;
    private boolean sent = false;
    /**
     * Creates new form ClientGUI
     */
    public ClientGUI(String username, String ipAddress, int portnum) {
        super(username);
        initComponents();
        
        this.username = username;
        this.ipAddress = ipAddress;
        this.portnum = portnum;

        System.out.println("ClientGUI STAAAATO");
        
        guiThread = new Thread(this);
        guiThread.start();       
        
       
        serverChat.setEditable(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chatfieldBox = new javax.swing.JTextField();
        messageSend = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        buttonLogout = new javax.swing.JButton();
        privateMessage = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        nameOfUsers = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        serverChat = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        userOnline = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setName("ClientGUI"); // NOI18N
        setResizable(false);

        messageSend.setText("Send");
        messageSend.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                messageSendActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 44)); // NOI18N
        jLabel1.setText("REP MESSENGER");

        buttonLogout.setText("Logout");
        buttonLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLogoutActionPerformed(evt);
            }
        });

        privateMessage.setText("Private Message");
        privateMessage.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                privateMessageActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel2.setText("USERS");

        nameOfUsers.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jScrollPane1.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane1.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        serverChat.setColumns(20);
        serverChat.setRows(5);
        jScrollPane1.setViewportView(serverChat);

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);

        userOnline.setAlignmentX(0.5F);
        userOnline.setLayout(new javax.swing.BoxLayout(userOnline, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(userOnline);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(messageSend)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(privateMessage)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(50, 50, 50)
                                .addComponent(jLabel2)
                                .addGap(60, 60, 60))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nameOfUsers, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(11, 11, 11)
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE))
                            .addComponent(chatfieldBox, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(52, 52, 52)
                                .addComponent(buttonLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(51, 51, 51))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addContainerGap())))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 451, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonLogout)
                    .addComponent(chatfieldBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(messageSend)
                    .addComponent(privateMessage)
                    .addComponent(nameOfUsers, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void messageSendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_messageSendActionPerformed
        // TODO add your handling code here:

        sent = true;
        
    }//GEN-LAST:event_messageSendActionPerformed

    private void privateMessageActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_privateMessageActionPerformed
        // TODO add your handling code here:
        /*
        jComboBox to select a username to chat with, then use that name to open PrivateMessageGUI();
        */
        //String chosenUser = userOnline.getSelectedValue();
        //new PrivateMessageGUI(chosenUser).setVisible(true);
    }//GEN-LAST:event_privateMessageActionPerformed

    private void buttonLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLogoutActionPerformed
        try {
            // TODO add your handling code here:
            //servGUI.globalServer.append(username + " logged out! \n");
            this.socket.close();
        } catch (IOException ex) {
            Logger.getLogger(ClientGUI.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.dispose();
        System.exit(1);
        cmGUI.setVisible(true);
    }//GEN-LAST:event_buttonLogoutActionPerformed


    private void initializeClient(String username) {
    	try {
                System.out.println("initializing");
                //userOnline.append(username);
		this.socket = new Socket(ipAddress, portnum);
                //ObjectOutputStream oos = new ObjectOutputStream(socket.getOutputStream());
                //oos.writeObject(this);
		Thread.sleep(1000);
                
		MessageThread msgThread = new MessageThread(socket, username, this);
                Thread servAccessThread = new Thread(msgThread);
                
                servAccessThread.start();
		
                
                while(servAccessThread.isAlive()){

                    if(sent == true){                                   //should put a "marker" in front of the message so server can parse it and check where to send
                        StringBuilder sb = new StringBuilder();
                        sb.append("/a/");
                        sb.append(chatfieldBox.getText());
                        msgThread.addNextMessage(sb.toString());   // /w/ (whisper) /g/ (group) or /a/ (all)
                        chatfieldBox.setText("");
                        sent = false;
                    }
                
                }
    		
    	}catch(IOException e){
        
            e.printStackTrace();
        }catch(InterruptedException e){
        
            e.printStackTrace();
        }
    	
    }
        
    /**
     * @param args the command line arguments
     * @return 
     */
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(ClientGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new ClientGUI().setVisible(true);
//            }
//        });
//    }

    public JTextArea getChatFieldBox(){
        return serverChat;
    }
    
    public JPanel getUserOnline(){
        return userOnline;
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonLogout;
    private javax.swing.JTextField chatfieldBox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton messageSend;
    private javax.swing.JComboBox<String> nameOfUsers;
    private javax.swing.JButton privateMessage;
    private javax.swing.JTextArea serverChat;
    private javax.swing.JPanel userOnline;
    // End of variables declaration//GEN-END:variables

    @Override
    public void run() {
        initializeClient(this.username);
        
    }
}
